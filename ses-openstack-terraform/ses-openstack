#!/bin/bash

log()   { echo ">>> $1" ; }
warn()  { log "WARNING: $1" ; }
abort() { log "$1" ; exit 1 ; }

USAGE=$(cat <<USAGE
USAGE:

  Before running ses-openstack script:

  1. Use openrc.sh OpenStack file and

     # source openrc.sh 

    or manually export following variables

  # export OS_AUTH_URL - OpenStack Identity API v3
  # export OS_USER_DOMAIN_NAME - OpenStack Domain Name
  # export OS_PROJECT_NAME - OpenStack Project Name
  # export OS_REGION_NAME - OpenStack Region Name
  # export OS_USERNAME - OpenStack User Name
  # export OS_PASSWORD - OpenStack User Password

  2. Edit openstack.tfvars file and provide following options

  * image_name - SLES OpenStack Image Name
  * internal_net - OpenStack Private Network Name
  * external_net - OpenStack Public Network Name
  * admin_size - SES Admin OpenStack Flavour
  * master_size - SES Master OpenStack Flavour
  * worker_size - SES Worker OpenStack Flavour
  * mons - Number of SES Mon nodes
  * osds - Number of SES OSD nodes
  * regcode - sles reg code
  * ses_base - ses base repo
  * ses_update - ses update repo
  * identifier - appends to ssh key names and security group definitions so that there are no colissions when using one namespace

  3. Run ses-openstack with following action:

  # ses-openstack apply - deploy SES application
  # ses-openstack refresh - refresh SES resources
  # ses-openstack plan - plan SES update
  # ses-openstack destroy - cleanup SES installation  
  # ses-openstack output - show SES ip addresses
  # ses-openstack show - show SES deployment
  
<<<
USAGE
)

if [ $# -eq 1 ]; then
  case $1 in
    apply|output|show|plan|refresh|destroy)
      COMMAND=$1
      ;;
    *)
      abort "$USAGE"
      ;; 
  esac
else 
  abort "$USAGE"
fi

[ -d ssh ] || mkdir ssh

if ! [ -f ssh/id_ses ]; then
  ssh-keygen -b 2048 -t rsa -f ssh/id_ses -N ""
fi

if [ -v $OS_AUTH_URL ] || [ -v $OS_PROJECT_NAME ] || \
    [ -v $OS_USER_DOMAIN_NAME ] ||  [ -v $OS_USERNAME ] || \
    [ -v $OS_REGION_NAME ]; then
  abort "$USAGE"
fi

echo ""
echo "OpenStack endpoint $OS_AUTH_URL"
echo ""

if [ -v $OS_PASSWORD ]; then
  echo "Please enter your OpenStack Password: "
  read -sr OS_PASSWORD_INPUT
  export OS_PASSWORD=$OS_PASSWORD_INPUT
fi

terraform $COMMAND -var auth_url=$OS_AUTH_URL -var domain_name=$OS_USER_DOMAIN_NAME \
                    -var region_name=$OS_REGION_NAME -var project_name=$OS_PROJECT_NAME \
                    -var user_name=$OS_USERNAME -var password=$OS_PASSWORD -var-file=openstack.tfvars
